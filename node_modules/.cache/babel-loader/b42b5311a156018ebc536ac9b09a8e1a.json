{"ast":null,"code":"var _jsxFileName = \"/Users/dpolydor/Desktop/asambeauty/src/Components/ProductCard.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport Test from \"./Test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductCard = props => {\n  let badgeOutput = \"\";\n\n  switch (props.product.badge) {\n    case \"bestSeller\":\n      badgeOutput = \"- BESTSELLER -\";\n      break;\n\n    case \"gratis\":\n      badgeOutput = \"- GRATIS VERSAND -\";\n      break;\n\n    case \"onlineOnly\":\n      badgeOutput = \"- EXLUSIV ONLINE -\";\n      break;\n\n    default:\n      break;\n  }\n\n  let pricePerQty = (props.product.price.amount * 100 / props.product.quantity.amount).toFixed(2).toLocaleString(\"de-DE\");\n  let discount = props.product.discount > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" -\", props.product.discount, \"% \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 51\n  }, this) : \"\";\n  let isXXl = props.product.quantity.isXXL ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" XXL \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 50\n  }, this) : \"\";\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: props.product.name,\n    component: Test,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: props.product.name,\n        src: props.product.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), discount, isXXl, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: badgeOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.product.producer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.product.quantity.amount, \" \", props.product.quantity.unit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.product.description.short\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.product.description.long\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.product.ratings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [props.product.price.amount.toLocaleString(\"de-DE\"), \" \", props.product.price.currency]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"(\", pricePerQty, \" \", props.product.price.currency, \" / 100\", \" \", props.product.quantity.unit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["/Users/dpolydor/Desktop/asambeauty/src/Components/ProductCard.js"],"names":["React","Link","Test","ProductCard","props","badgeOutput","product","badge","pricePerQty","price","amount","quantity","toFixed","toLocaleString","discount","isXXl","isXXL","name","image","producer","unit","description","short","long","ratings","currency"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Test from \"./Test\";\r\n\r\nconst ProductCard = (props) => {\r\n  let badgeOutput = \"\";\r\n  switch (props.product.badge) {\r\n    case \"bestSeller\":\r\n      badgeOutput = \"- BESTSELLER -\";\r\n      break;\r\n    case \"gratis\":\r\n      badgeOutput = \"- GRATIS VERSAND -\";\r\n      break;\r\n      case \"onlineOnly\":\r\n        badgeOutput = \"- EXLUSIV ONLINE -\";\r\n        break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let pricePerQty = (\r\n    (props.product.price.amount * 100) /\r\n    props.product.quantity.amount\r\n  )\r\n    .toFixed(2)\r\n    .toLocaleString(\"de-DE\");\r\n\r\n    let discount = (props.product.discount > 0) ? <div> -{props.product.discount}% </div>  : \"\";\r\n    let isXXl = (props.product.quantity.isXXL) ? <div> XXL </div>  : \"\";\r\n\r\n  return (\r\n    <Link to={props.product.name} component={Test}>\r\n    <div>\r\n      <img alt={props.product.name} src={props.product.image}></img>\r\n      {discount}\r\n      {isXXl}\r\n      <div>{badgeOutput}</div>\r\n      <div>{props.product.producer}</div>\r\n      <div>{props.product.name}</div>\r\n      <div>\r\n        {props.product.quantity.amount} {props.product.quantity.unit}\r\n      </div>\r\n      <div>{props.product.description.short}</div>\r\n      <div>{props.product.description.long}</div>\r\n      <div>{props.product.ratings}</div>\r\n\r\n      {/* Use to toLocaleString('de-DE') in order to convert decimal price from \".\" to \",\" for display */}\r\n      <div>\r\n        {props.product.price.amount.toLocaleString(\"de-DE\")}{\" \"}\r\n        {props.product.price.currency}\r\n      </div>\r\n      <div>\r\n        ({pricePerQty} {props.product.price.currency} / 100{\" \"}\r\n        {props.product.quantity.unit})\r\n      </div>\r\n    </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}