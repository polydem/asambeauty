{"ast":null,"code":"var _jsxFileName = \"/Users/dpolydor/Desktop/asambeauty/src/Components/ProductCard.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductCard = props => {\n  let badgeOutput = \"\";\n\n  switch (props.product.badge) {\n    case \"bestSeller\":\n      badgeOutput = \"- BESTSELLER -\";\n      break;\n\n    case \"gratis\":\n      badgeOutput = \"- GRATIS VERSAND -\";\n      break;\n\n    case \"onlineOnly\":\n      badgeOutput = \"- EXLUSIV ONLINE -\";\n      break;\n\n    default:\n      break;\n  }\n\n  let pricePerQty = (props.product.price.amount * 100 / props.product.quantity.amount).toFixed(2).toLocaleString(\"de-DE\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: props.product.name,\n      src: props.product.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: badgeOutput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.product.producer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.product.quantity.amount, \" \", props.product.quantity.unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.product.description.short\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.product.description.long\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.product.ratings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [props.product.price.amount.toLocaleString(\"de-DE\"), \" \", props.product.price.currency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"(\", pricePerQty, \" \", props.product.price.currency, \" / 100\", \" \", props.product.quantity.unit, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProductCard;\nexport default ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["/Users/dpolydor/Desktop/asambeauty/src/Components/ProductCard.js"],"names":["React","ProductCard","props","badgeOutput","product","badge","pricePerQty","price","amount","quantity","toFixed","toLocaleString","name","image","producer","unit","description","short","long","ratings","currency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,MAAIC,WAAW,GAAG,EAAlB;;AACA,UAAQD,KAAK,CAACE,OAAN,CAAcC,KAAtB;AACE,SAAK,YAAL;AACEF,MAAAA,WAAW,GAAG,gBAAd;AACA;;AACF,SAAK,QAAL;AACEA,MAAAA,WAAW,GAAG,oBAAd;AACA;;AACA,SAAK,YAAL;AACEA,MAAAA,WAAW,GAAG,oBAAd;AACA;;AACJ;AACE;AAXJ;;AAcA,MAAIG,WAAW,GAAG,CACfJ,KAAK,CAACE,OAAN,CAAcG,KAAd,CAAoBC,MAApB,GAA6B,GAA9B,GACAN,KAAK,CAACE,OAAN,CAAcK,QAAd,CAAuBD,MAFP,EAIfE,OAJe,CAIP,CAJO,EAKfC,cALe,CAKA,OALA,CAAlB;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAET,KAAK,CAACE,OAAN,CAAcQ,IAAxB;AAA8B,MAAA,GAAG,EAAEV,KAAK,CAACE,OAAN,CAAcS;AAAjD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAMD,KAAK,CAACE,OAAN,CAAcU;AAApB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAMZ,KAAK,CAACE,OAAN,CAAcQ;AAApB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,iBACGV,KAAK,CAACE,OAAN,CAAcK,QAAd,CAAuBD,MAD1B,OACmCN,KAAK,CAACE,OAAN,CAAcK,QAAd,CAAuBM,IAD1D;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAA,gBAAMb,KAAK,CAACE,OAAN,CAAcY,WAAd,CAA0BC;AAAhC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,gBAAMf,KAAK,CAACE,OAAN,CAAcY,WAAd,CAA0BE;AAAhC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,gBAAMhB,KAAK,CAACE,OAAN,CAAce;AAApB;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE;AAAA,iBACGjB,KAAK,CAACE,OAAN,CAAcG,KAAd,CAAoBC,MAApB,CAA2BG,cAA3B,CAA0C,OAA1C,CADH,EACuD,GADvD,EAEGT,KAAK,CAACE,OAAN,CAAcG,KAAd,CAAoBa,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE;AAAA,sBACId,WADJ,OACkBJ,KAAK,CAACE,OAAN,CAAcG,KAAd,CAAoBa,QADtC,YACsD,GADtD,EAEGlB,KAAK,CAACE,OAAN,CAAcK,QAAd,CAAuBM,IAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/CD;;KAAMd,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst ProductCard = (props) => {\r\n  let badgeOutput = \"\";\r\n  switch (props.product.badge) {\r\n    case \"bestSeller\":\r\n      badgeOutput = \"- BESTSELLER -\";\r\n      break;\r\n    case \"gratis\":\r\n      badgeOutput = \"- GRATIS VERSAND -\";\r\n      break;\r\n      case \"onlineOnly\":\r\n        badgeOutput = \"- EXLUSIV ONLINE -\";\r\n        break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  let pricePerQty = (\r\n    (props.product.price.amount * 100) /\r\n    props.product.quantity.amount\r\n  )\r\n    .toFixed(2)\r\n    .toLocaleString(\"de-DE\");\r\n\r\n  return (\r\n    <div>\r\n      <img alt={props.product.name} src={props.product.image}></img>\r\n      <div>{badgeOutput}</div>\r\n      <div>{props.product.producer}</div>\r\n      <div>{props.product.name}</div>\r\n      <div>\r\n        {props.product.quantity.amount} {props.product.quantity.unit}\r\n      </div>\r\n      <div>{props.product.description.short}</div>\r\n      <div>{props.product.description.long}</div>\r\n      <div>{props.product.ratings}</div>\r\n\r\n      {/* Use to toLocaleString('de-DE') in order to convert decimal price from \".\" to \",\" for display */}\r\n      <div>\r\n        {props.product.price.amount.toLocaleString(\"de-DE\")}{\" \"}\r\n        {props.product.price.currency}\r\n      </div>\r\n      <div>\r\n        ({pricePerQty} {props.product.price.currency} / 100{\" \"}\r\n        {props.product.quantity.unit})\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}